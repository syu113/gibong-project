<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gibong.web.dao.ReviewDao">
	<resultMap id="reviewResultMap" type="com.gibong.web.model.Review">
		<id column="REVIEW_SEQ" property="reviewSeq" />		
			<result column="USER_ID" property="userId" />
			<result column="USER_NAME" property="userName" />
			<result column="REVIEW_TITLE" property="reviewTitle" />
			<result column="REVIEW_CONTENT" property="reviewContent" />
			<result column="REVIEW_DEL_FLAG" property="reviewDelFlag" />
			<result column="REVIEW_READ_CNT" property="reviewReadCnt" />
			<result column="REVIEW_LIKE_CNT" property="reviewLikeCnt" />
			<result column="REGDATE" property="regdate" />
			<result column="FILE_NAME" property="fileName" />
			<result column="FILE_ORG_NAME" property="fileOrgName" />
	</resultMap>
	
	<resultMap id="reviewFileResultMap" type="com.gibong.web.model.ReviewFile">
		<id column="REVIEW_SEQ" property="reviewSeq" />		
			<result column="FILE_SEQ" property="fileSeq" />
			<result column="FILE_ORG_NAME" property="fileOrgName" />
			<result column="FILE_NAME" property="fileName" />
			<result column="FILE_EXT" property="fileExt" />
			<result column="FILE_SIZE" property="fileSize" />
			<result column="REGDATE" property="regdate" />
	</resultMap>

	<resultMap id="reviewReplyResultMap" type="com.gibong.web.model.ReviewReply">
			<id column="USER_ID" property="userId" />		
				<result column="USER_NAME" property="userName" />
				<result column="REVIEW_REPLY_SEQ" property="reviewReplySeq" />
				<result column="REVIEW_SEQ" property="reviewSeq" />
				<result column="REPLY_DEL_FLAG" property="replyDelFlag" />
				<result column="REVIEW_REPLY_CONTENT" property="reviewReplyContent" />
				<result column="REVIEW_REPLY_GROUP" property="reviewReplyGroup" />
				<result column="REVIEW_REPLY_ORDER" property="reviewReplyOrder" />
				<result column="REVIEW_REPLY_INDENT" property="reviewReplyIndent" />
				<result column="REGDATE" property="regdate" />
	</resultMap>
	

	<select id="reviewList" parameterType="com.gibong.web.model.Review" resultMap="reviewResultMap">
			SELECT REVIEW_SEQ,
			       USER_ID,
			       USER_NAME,
			       REVIEW_TITLE,
			       REVIEW_CONTENT,
			       REVIEW_DEL_FLAG,
			       REVIEW_READ_CNT,
			       REVIEW_LIKE_CNT,
			       REGDATE,
                   FILE_NAME,
                   FILE_ORG_NAME
			  FROM(SELECT ROWNUM RNUM,
			              REVIEW_SEQ,
			              USER_ID,
			              USER_NAME,
			              REVIEW_TITLE,
			              REVIEW_CONTENT,
			              REVIEW_DEL_FLAG,
			              REVIEW_READ_CNT,
			              REVIEW_LIKE_CNT,
			              REGDATE,
                          FILE_NAME,
                          FILE_ORG_NAME
			        FROM(SELECT A.REVIEW_SEQ,
			                    NVL(B.USER_ID, '') USER_ID,
			                    NVL(B.USER_NAME, '') USER_NAME,
			                    NVL(A.REVIEW_TITLE, '') REVIEW_TITLE,
			                    NVL(A.REVIEW_CONTENT, '') REVIEW_CONTENT,
			                    NVL(A.REVIEW_DEL_FLAG, '') REVIEW_DEL_FLAG,
			                    NVL(A.REVIEW_READ_CNT, 0) REVIEW_READ_CNT,
			                    NVL(A.REVIEW_LIKE_CNT, 0) REVIEW_LIKE_CNT,
			                    NVL(TO_CHAR(A.REGDATE, 'YYYY.MM.DD'), '') REGDATE,
                                NVL(C.FILE_NAME, '') FILE_NAME,
                                NVL(C.FILE_ORG_NAME, '') FILE_ORG_NAME
			               FROM GIBONG_REVIEW A, GIBONG_USER B, GIBONG_REVIEW_FILE C
			              WHERE A.USER_ID = B.USER_ID
                            AND A.REVIEW_SEQ = C.REVIEW_SEQ(+)
                            AND A.REVIEW_DEL_FLAG = 'N'
		 <if test='searchType != null and searchType != "" and searchValue != null and searchValue != "" '>
		  		<choose>
		  			<when test='searchType == "1"'>
			                AND B.USER_NAME LIKE '%'|| #{searchValue} ||'%'
					</when>
					
					<when test='searchType == "2"'>
			                AND A.REVIEW_TITLE LIKE '%'|| #{searchValue} ||'%'
			                
			        </when>
			        
			        <when test='searchType == "3"'>
			                AND DBMS_LOB.INSTR(A.REVIEW_CONTENT, #{searchValue}) > 0
			        </when>
			    </choose>
		 </if>
			              ORDER BY A.REVIEW_SEQ DESC))
			 WHERE RNUM <![CDATA[>=]]> #{startRow}
			   AND RNUM <![CDATA[<=]]> #{endRow}
	
	</select>


	<select id="reviewTotalCount" parameterType="com.gibong.web.model.Review" resultType="long">
		SELECT COUNT(A.REVIEW_SEQ)
		  FROM GIBONG_REVIEW A, GIBONG_USER B
		 WHERE A.USER_ID = B.USER_ID
	
	</select>
	
	<!-- 후기 글쓰기 -->
	<insert id="reviewInsert" parameterType="com.gibong.web.model.Review" >
	<!-- 선행처리기(시퀀스생성) : 첨부파일이 같이 인설트 되게 하기위해서 -->
	  	<selectKey resultType="long" keyProperty="reviewSeq" order="BEFORE" >
	  		SELECT SEQ_GIBONG_REVIEW.NEXTVAL FROM DUAL
	  	</selectKey>
		
		INSERT INTO GIBONG_REVIEW (
			    REVIEW_SEQ,
			    USER_ID,
			    REVIEW_TITLE,
			    REVIEW_CONTENT,
			    REVIEW_DEL_FLAG,
			    REVIEW_READ_CNT,
			    REVIEW_LIKE_CNT,
			    REGDATE
			) VALUES (
			    #{reviewSeq},
			    #{userId},
			    #{reviewTitle},
			    #{reviewContent},
			    'N',
			    #{reviewReadCnt},
			    #{reviewLikeCnt},
			    SYSDATE
			)
		
	
	</insert>
	
	<!-- 첨부파일 등록 -->
	<insert id="reviewFileInsert" parameterType="com.gibong.web.model.ReviewFile">
	
	INSERT INTO GIBONG_REVIEW_FILE (
			    REVIEW_SEQ,
			    FILE_SEQ,
			    FILE_ORG_NAME,
			    FILE_NAME,
			    FILE_EXT,
			    FILE_SIZE,
			    REGDATE
			) VALUES (
			    #{reviewSeq},
			    #{fileSeq},
			    #{fileOrgName},
			    #{fileName},
			    #{fileExt},
			    #{fileSize},
			    SYSDATE
			)
	</insert>
	
	
	<!-- 첨부파일 조회 -->
	<select id="reviewFileSelect" parameterType="long" resultMap="reviewFileResultMap">
		SELECT REVIEW_SEQ,
		       FILE_SEQ,
		       FILE_ORG_NAME,
		       FILE_NAME,
		       FILE_EXT,
		       FILE_SIZE,
		       REGDATE
		  FROM GIBONG_REVIEW_FILE
		 WHERE REVIEW_SEQ = #{value}
	
	</select>
	
	
	<!-- 후기 글 상세 -->
	<select id="reviewViewSelect" parameterType="long" resultMap="reviewResultMap">
		SELECT A.REVIEW_SEQ,
		       NVL(B.USER_ID, '') USER_ID,
		       NVL(B.USER_NAME, '') USER_NAME,
		       NVL(A.REVIEW_TITLE, '') REVIEW_TITLE,
		       NVL(A.REVIEW_CONTENT, '') REVIEW_CONTENT,
		       NVL(A.REVIEW_DEL_FLAG, '') REVIEW_DEL_FLAG,
		       NVL(A.REVIEW_READ_CNT, 0) REVIEW_READ_CNT,
		       NVL(A.REVIEW_LIKE_CNT, 0) REVIEW_LIKE_CNT,
		       NVL(TO_CHAR(A.REGDATE, 'YYYY.MM.DD'), '') REGDATE,
		       NVL(C.FILE_NAME, '') FILE_NAME,
		       NVL(C.FILE_ORG_NAME, '') FILE_ORG_NAME
		  FROM GIBONG_REVIEW A, GIBONG_USER B, GIBONG_REVIEW_FILE C
		 WHERE A.USER_ID = B.USER_ID
		   AND A.REVIEW_SEQ = C.REVIEW_SEQ(+)
		   AND A.REVIEW_SEQ = #{value}
	
	</select>
	
	<!-- 조회수증가 -->
	<update id="reviewReadCntPlus" parameterType="long" >
  
		 UPDATE GIBONG_REVIEW
		    SET REVIEW_READ_CNT = REVIEW_READ_CNT + 1
		  WHERE REVIEW_SEQ = #{value}
	  </update>
	
	
	<!-- 게시글수정 -->
	<update id="reviewUpdate" parameterType="com.gibong.web.model.Review" >
			UPDATE GIBONG_REVIEW
			   SET REVIEW_TITLE = #{reviewTitle},
			       REVIEW_CONTENT = #{reviewContent}
			 WHERE REVIEW_SEQ = #{reviewSeq}
	
	</update>
	
	<!-- 게시글 수정중 첨부파일 삭제 -->
	<delete id="reviewFileDelete" parameterType="long">
		DELETE FROM GIBONG_REVIEW_FILE 
 		  WHERE REVIEW_SEQ = #{value}
	</delete>
	
	
	<!-- 게시글 삭제(update로 플래그값 바꿔주기) -->
	<update id="reviewDelete" parameterType="long">
		UPDATE GIBONG_REVIEW
   		   SET REVIEW_DEL_FLAG = 'Y'
 	     WHERE REVIEW_SEQ = #{value}
	</update>
	
	
	
	
	<select id="reviewReplySelect" parameterType="long" resultMap="reviewReplyResultMap">
		SELECT B.USER_ID,
		        NVL(B.USER_NAME, '') USER_NAME,
		        NVL(A.REVIEW_REPLY_SEQ, 0) REVIEW_REPLY_SEQ,
		        NVL(A.REVIEW_SEQ, 0) REVIEW_SEQ,
		        NVL(A.REPLY_DEL_FLAG, 'N') REPLY_DEL_FLAG,
		        NVL(A.REVIEW_REPLY_CONTENT, '') REVIEW_REPLY_CONTENT,
		        NVL(A.REVIEW_REPLY_GROUP, 0) REVIEW_REPLY_GROUP,
		        NVL(A.REVIEW_REPLY_ORDER, 0) REVIEW_REPLY_ORDER,
		        NVL(A.REVIEW_REPLY_INDENT, 0) REVIEW_REPLY_INDENT,
		        NVL(TO_CHAR(REGDATE, 'YYYY.MM.DD HH24:MI:SS'), '') REGDATE
		  FROM GIBONG_REVIEW_REPLY A, GIBONG_USER B
		 WHERE A.USER_ID = B.USER_ID
		   AND A.REVIEW_SEQ = #{value}
		 ORDER BY REVIEW_REPLY_GROUP DESC, REVIEW_REPLY_ORDER ASC
		
	</select>
	
	<insert id="reviewReplyInsert" parameterType="com.gibong.web.model.ReviewReply">
	<selectKey resultType="long" keyProperty="reviewReplySeq" order="BEFORE" >
  		SELECT SEQ_REVIEW_REPLY_SEQ.NEXTVAL FROM DUAL
  	</selectKey>
		INSERT INTO GIBONG_REVIEW_REPLY (
		    USER_ID,
		    REVIEW_REPLY_SEQ,
		    REVIEW_SEQ,
		    REPLY_DEL_FLAG,
		    REVIEW_REPLY_CONTENT,
		    REVIEW_REPLY_GROUP,
		    REVIEW_REPLY_ORDER,
		    REVIEW_REPLY_INDENT,
		    REGDATE
		) VALUES (
		    #{userId},
		    #{reviewReplySeq},
		    #{reviewSeq},
		    'N',
		    #{reviewReplyContent},
		    #{reviewReplySeq},
		    #{reviewReplyOrder},
		    #{reviewReplyIndent},
		    SYSDATE
)
	</insert>
	
	<insert id="reviewReplyInsert2" parameterType="com.gibong.web.model.ReviewReply">
	<selectKey resultType="long" keyProperty="reviewReplySeq" order="BEFORE" >
  		SELECT SEQ_REVIEW_REPLY_SEQ.NEXTVAL FROM DUAL
  	</selectKey>
		INSERT INTO GIBONG_REVIEW_REPLY (
		    USER_ID,
		    REVIEW_REPLY_SEQ,
		    REVIEW_SEQ,
		    REPLY_DEL_FLAG,
		    REVIEW_REPLY_CONTENT,
		    REVIEW_REPLY_GROUP,
		    REVIEW_REPLY_ORDER,
		    REVIEW_REPLY_INDENT,
		    REGDATE
		) VALUES (
		    #{userId},
		    #{reviewReplySeq},
		    #{reviewSeq},
		    'N',
		    #{reviewReplyContent},
		    #{reviewReplyGroup},
		    #{reviewReplyOrder},
		    #{reviewReplyIndent},
		    SYSDATE
)
	</insert>
	
	<select id="reviewReplyCount" parameterType="long" resultType="long" >
		SELECT COUNT(REVIEW_REPLY_SEQ)
  		  FROM GIBONG_REVIEW_REPLY
  		 WHERE REVIEW_SEQ = #{value}
	
	</select>
	
	
	<select id="viewReplySelect" parameterType="long" resultMap="reviewReplyResultMap">
				 SELECT B.USER_ID,
				        NVL(B.USER_NAME, '') USER_NAME,
				        NVL(A.REVIEW_REPLY_SEQ, 0) REVIEW_REPLY_SEQ,
				        NVL(A.REVIEW_SEQ, 0) REVIEW_SEQ,
				        NVL(A.REPLY_DEL_FLAG, 'N') REPLY_DEL_FLAG,
				        NVL(A.REVIEW_REPLY_CONTENT, '') REVIEW_REPLY_CONTENT,
				        NVL(A.REVIEW_REPLY_GROUP, 0) REVIEW_REPLY_GROUP,
				        NVL(A.REVIEW_REPLY_ORDER, 0) REVIEW_REPLY_ORDER,
				        NVL(A.REVIEW_REPLY_INDENT, 0) REVIEW_REPLY_INDENT,
				        NVL(TO_CHAR(REGDATE, 'YYYY.MM.DD HH24:MI:SS'), '') REGDATE
				  FROM GIBONG_REVIEW_REPLY A, GIBONG_USER B
				 WHERE A.USER_ID = B.USER_ID
				   AND A.REVIEW_REPLY_SEQ = #{value}
	
	</select>
	
	<!-- 댓글 삭제 -->
	<update id="replyDelete" parameterType="long" >
		UPDATE GIBONG_REVIEW_REPLY
		   SET REPLY_DEL_FLAG = 'Y'
		 WHERE REVIEW_REPLY_SEQ = #{value}
	</update>
	
</mapper>
